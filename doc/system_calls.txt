int sys_create_thread();
    params
        ebx - start point
        ecx - priority
        edx - pointer to args
    returns:
        eax:
            0 - no enough memory
            non 0 - ok, returned value is new thread id

NO_RETURN sys_exit_thread();

void sys_write();
    write a character stored in the al register to stdout

void sys_read();
    read a character from stdin and store it in the al register

int sys_is_thread_running(int thread_id)
    params
        ebx - thread id
    returns:
        eax:
            0 - not running
            1 - running


void* sys_malloc()
    params
        eax - size of memory to allocate
    returns:
        eax:
            NULL - malloc failed
            not NULL - pointer to allocated memory
    invalidates
        eax

int sys_try_lock_mutex()
    params
        ebx - mutex pointer
    returns:
        eax:
            0 - lock fail
            1 - lock success
    invalidates
        eax